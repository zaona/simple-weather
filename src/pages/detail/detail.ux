<template>
  <!-- 页面容器，支持右滑返回 -->
  <div class="page-container" @swipe="toHomePageSwipe">
    <!-- 背景图片 -->
    <image class="page-bg" src="/common/weather-bgs/{{ backgroundImage }}.png" />

    <!-- 加载动画容器 -->
    <div class="loading-container" if="{{ isLoading }}">
      <div class="loading-bg"></div>
      <image class="loading-icon" src="/common/loading.png" />
    </div>

    <scroll
      class="main-content scroll-container"
      scroll-y="true"
      bounces="true"
      if="{{ !isLoading }}"
    >
      <!-- 头部信息：地点和选中日期 -->
      <div class="page-header">
        <text class="text-title">详情</text>
        <text class="text-subtitle">{{ updateTime }}</text>
      </div>

      <!-- 当前天气概览 -->
      <div class="content-hero card-margin">
        <image class="icon-weather-main" src="/common/weather-icons/{{ iconCode }}.png" />
        <text class="text-weather">{{ textDay }}</text>
        <text class="text-temp-range">{{ tempMinMax }}</text>
      </div>

      <!-- 按类别组织的详细天气数据 -->
      <div class="card card-double" for="{{ category in weatherCategories }}">
        <div class="item-data" for="{{ item in category.items }}">
          <text class="text-data-value">{{ item.value }}{{ item.unit }}</text>
          <text class="text-data-label">{{ item.name }}</text>
        </div>
      </div>
    </scroll>
  </div>
</template>

<script>
// 导入系统模块
import router from "@system.router"
import {showToast} from "@system.prompt"

// 导入服务层
import DataService from "../../services/data-service.js"
import {MESSAGES, TOAST_DURATION} from "../../services/config.js"

// 导入工具类
import {WeatherDataUtils} from "../../common/weather-utils.js"

export default {
  // 接收来自 index 页面的 selectedDate 参数
  protected: {
    selectedDate: "" // 接收字符串格式的日期，例如 "2025-08-30"
  },

  // 页面私有数据
  private: {
    isLoading: true, // 加载状态
    location: "__", // 地点
    updateTime: "__", // 选中的日期或加载状态
    iconCode: "__", // 天气图标代码
    textDay: "__", // 白天天气描述
    tempMinMax: "__°/__°", // 最高/最低温度
    backgroundImage: "", // 背景图片

    // 按类别组织的天气指标数据
    weatherCategories: [
      {
        // 基础气象指标
        items: [
          {name: "紫外线指数", value: "__", unit: "", uniqueId: 1},
          {name: "相对湿度", value: "__", unit: "%", uniqueId: 2},
          {name: "大气压强", value: "__", unit: "hPa", uniqueId: 5},
          {name: "能见度", value: "__", unit: "km", uniqueId: 7},
          {name: "云量", value: "__", unit: "%", uniqueId: 8}
        ]
      },
      {
        // 降水指标
        items: [{name: "总降水量", value: "__", unit: "mm", uniqueId: 6}]
      },
      {
        // 日间天气
        items: [
          {name: "白天天气描述", value: "__", unit: "", uniqueId: 13},
          {name: "白天风向", value: "__", unit: "", uniqueId: 3},
          {name: "白天风力等级", value: "__", unit: "级", uniqueId: 4},
          {name: "白天风速", value: "__", unit: "km/h", uniqueId: 17},
          {name: "白天风向角度", value: "__", unit: "°", uniqueId: 19}
        ]
      },
      {
        // 夜间天气
        items: [
          {name: "夜间天气描述", value: "__", unit: "", uniqueId: 14},
          {name: "夜间风向", value: "__", unit: "", uniqueId: 15},
          {name: "夜间风力等级", value: "__", unit: "级", uniqueId: 16},
          {name: "夜间风速", value: "__", unit: "km/h", uniqueId: 18},
          {name: "夜间风向角度", value: "__", unit: "°", uniqueId: 20}
        ]
      },
      {
        // 天文时间
        items: [
          {name: "日出时间", value: "__", unit: "", uniqueId: 9},
          {name: "日落时间", value: "__", unit: "", uniqueId: 10},
          {name: "月升时间", value: "__", unit: "", uniqueId: 21},
          {name: "月落时间", value: "__", unit: "", uniqueId: 22},
          {name: "月相名称", value: "__", unit: "", uniqueId: 23}
        ]
      }
    ],

    /**
     * 右滑返回index页面
     */
    toHomePageSwipe(eve) {
      if (eve.direction === "right") {
        router.back()
      }
    }
  },

  /**
   * 更新天气指标数据
   * @param {Object} selectedData - 选中日期的天气数据
   */
  updateWeatherFigures(selectedData) {
    const valueMap = WeatherDataUtils.getDetailedWeatherFigures(selectedData)

    // 遍历并更新各项数值
    this.weatherCategories = this.weatherCategories.map((category) => ({
      items: category.items.map((item) => ({
        ...item,
        value: valueMap[item.uniqueId] !== undefined ? valueMap[item.uniqueId] : item.value
      }))
    }))
  },

  /**
   * 页面初始化
   */
  async onInit() {
    // 检查是否接收到日期参数
    if (!this.selectedDate) {
      this.isLoading = false
      showToast({
        message: MESSAGES.NO_DATE_RECEIVED,
        duration: TOAST_DURATION.NORMAL
      })
      return
    }

    // 从服务层读取指定日期的数据
    const selectedData = await DataService.getDataByDate(this.selectedDate)

    if (!selectedData) {
      this.isLoading = false
      showToast({
        message: MESSAGES.NO_DATA_FOR_DATE,
        duration: TOAST_DURATION.NORMAL
      })
      return
    }

    // 更新顶部天气概览
    WeatherDataUtils.updateDetailCurrentWeather(this, selectedData)

    // 更新天气指标面板
    this.updateWeatherFigures(selectedData)

    // 数据加载完成
    this.isLoading = false
  }
}
</script>

<style>
/* 引入公共样式 */
@import "../../common/css/style.css";
@import "../../common/css/loading-styles.css";
@import "../../common/css/page-bg-styles.css";
</style>
