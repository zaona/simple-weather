<template>
  <div class="page" @swipe="toHomePage">
    <scroll class="main" scroll-y="true" bounces="true">
      <div class="header">
        <text class="page-title">更多</text>
        <!-- <text class="page-subtitle">简明天气</text> -->
      </div>

       <div class="hero-content">
        <image class="weather-icon" src="/common/logo.png" />
        <text class="app-text">简明天气</text>
        <text class="app-version">v1.6.0.7</text>
      </div>
      <!-- <div class="hero-content" style="margin-top: 24px">
        <div class="button" @click="handleDebug">
          <text class="button-text">调试</text>
        </div>
      </div> -->
    </scroll>
  </div>
</template>

<script>
import router from "@system.router"
import {showToast} from "@system.prompt"
import interconnect from "@system.interconnect"

let conn = null

export default {
  // 右滑返回index页面
  toHomePage(eve) {
    if (eve.direction === "right") {
      router.back()
    }
  },
  
  // 调试按钮点击事件
  handleDebug() {
    // 如果连接不存在，创建连接
    if (!conn) {
      this.createConnection()
    }
    
    // 发送测试消息
    this.sendMessage()
  },
  
  // 创建连接
  createConnection() {
    console.log('-------------创建连接----------------')
    conn = interconnect.instance()
    
    conn.getReadyState({
      success: data => {
        if (data.status === 1) {
          console.log('-----------------连接成功-----------------')
          showToast({message: "连接成功", duration: 1000})
        } else if (data.status === 2) {
          console.log('-----------------连接失败-----------------')
          showToast({message: "连接失败", duration: 2000})
        }
      },
      fail: (data, code) => {
        console.log(`-----------------getReadyState handling fail, code = ${code}-----------------`)
        showToast({message: `连接失败: ${code}`, duration: 2000})
      }
    })
    
    conn.onmessage = (data) => {
      console.log(`-----------------onmessage received message-------------------: ${data.data}`)
      showToast({message: `收到消息: ${data.data}`, duration: 2000})
    }
    
    conn.onopen = () => {
      console.log(`-----------------connection opened-----------------`)
      showToast({message: "连接已打开", duration: 1000})
    }
    
    conn.onclose = (data) => {
      console.log(`-----------------connection closed, reason = ${data.data}, code = ${data.code}-----------------`)
      conn = null
      showToast({message: "连接已关闭", duration: 1000})
    }
    
    conn.onerror = (data) => {
      console.log(`-----------------connection error, errMsg = ${data.data}, errCode = ${data.code}--------------`)
      showToast({message: `连接错误: ${data.data}`, duration: 2000})
    }
    
    // 打开连接
    conn.open()
  },
  
  // 发送消息
  sendMessage() {
    let data = {
      name: 'WeatherApp',
      action: 'debug',
      timestamp: Date.now()
    }
    
    console.log('---------------发送消息---------------', data)
    
    conn.send({
      data: data,
      success: () => {
        console.log(`----------------send handling success------------`)
        showToast({message: "消息发送成功", duration: 1000})
      },
      fail: (data) => {
        console.log(`--------------send handling fail, errMsg = ${data.data}, errCode = ${data.code}-------------`)
        showToast({message: `发送失败: ${data.data}`, duration: 2000})
      },
    })
  },
  
  // 页面销毁时关闭连接
  onDestroy() {
    if (conn && typeof conn.close === "function") {
      conn.close()
      conn = null
    }
  }
}
</script>

<style>
@import "../../common/style.css";

.app-text {
    font-size: 30px;
    font-weight: bold;
    margin-top: 20px;
}

.app-version {
    font-size: 24px;
    font-weight: bold;
    color: rgba(255, 255, 255, 0.8);
    margin-top: 4px;
    margin-bottom: 20px;
}
</style>
